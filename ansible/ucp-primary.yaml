---
- hosts: ucp-primary
  vars:
    kube_node: undefined
  remote_user: root
  tasks:
  - name: Updating YUM
    yum: name=* state=latest

  - name: Install GCC
    yum: name=gcc state=latest
  
  - name: Install Perl
    yum: name=perl state=latest

  - name: Install Old openssl
    yum: name=openssl state=latest

  - name: check openssl version
    shell: "openssl version"
    ignore_errors: yes
    register: openssl_version_query
    tags: openssl

  - name: Install Open SSL
    script: install_open_ssl.sh
    when: openssl_version_query.stdout.find('1.0.2h') == -1
    tags: openssl

  - name: Add Docker RPM Key
    shell: 'sudo rpm --import "https://sks-keyservers.net/pks/lookup?op=get&search=0xee6d536cf7dc86e2d7d56f59a178ac6c6238f52e"'
    
  - name: Install YUM Utils
    yum: name=yum-utils state=latest

  - name: Update YUM Config Manager
    shell: "sudo yum-config-manager --add-repo https://packages.docker.com/1.11/yum/repo/main/centos/7"

  - name: Install Docker Engine
    yum: name=docker-engine state=latest

  - name: Enable Docker Service
    shell: "systemctl enable docker.service"

  - name: Start Docker Service
    shell: "systemctl start docker.service"

  - name: Obtain IP address
    shell: grep {{ ansible_fqdn }} /etc/hosts | awk '{print $1}'
    register: host_ip

  - debug: msg="the IP address is {{ host_ip.stdout }}"

  - name: Obtain UCP Container ID
    shell: docker ps | grep docker/ucp | grep -v docker/ucp- | awk '{print $1}'
    register: container_id

  - debug: msg="the container ID is {{ container_id.stdout }}"

  - name: Stop existing UCP container
    shell: 'docker kill {{ container_id.stdout }}'
    ignore_errors: yes

  - name: Delete existing UCP container
    shell: 'docker rm {{ container_id.stdout }}'
    ignore_errors: yes

  - name: Install Docker UCP. It will take a few minutes...
    shell: 'docker run --rm -it --name ucp -v /var/run/docker.sock:/var/run/docker.sock docker/ucp install -i --host-address {{ host_ip.stdout }} --fresh-install'
